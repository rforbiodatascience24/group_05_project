---
title: "vivivi"
author: "Natalia Feced Garcia"
format: html
editor: visual
---

# Visualizations

```{r}
library(tidyverse)
library(table1)
library(readxl)
library(stringr)
library(reshape2)
library(ggplot2)
library(patchwork)
library(purrr)
library(broom)
```

```{r}
## TO BE MOVeD TO 03_AUGMENT
data <- data|>
  rename(
    Outcome = 'Death',
  ) |>
  mutate(
    Outcome = case_when(
      Outcome == 0 ~ 'Survived',
      Outcome == 1 ~'Deceased')
  )
```

## Antiviral Drug Visualizations

```{r}
# Demographical Visualizations
data |>
  group_by(Outcome, Antiviral_Drug) |>
  select(Outcome, Antiviral_Drug) |>
  filter(!is.na(Antiviral_Drug)) |>
  summarise(n = n()) |>
  ggplot(mapping = aes(x = Outcome, y = n, fill = Antiviral_Drug)) +
  geom_bar(stat = "identity", position = "stack") +
  labs(title = 'Distribution of Antiviral Drugs given per Patient Outcome')

data |> 
  group_by(Outcome, Age_range) |>
  select(Outcome, Age_range) |>
  summarise(n = n()) |>
  ggplot(mapping = aes(fill = Outcome, y = n, x = Age_range)) +
  geom_bar(stat = "identity", position = "stack") +
  labs(title = 'Distribution of Age Ranges accross Outcome')

data |> 
  group_by(Antiviral_Drug, Age_range) |>
  select(Antiviral_Drug, Age_range) |>
  filter(!is.na(Antiviral_Drug)) |>
  summarise(n = n()) |>
  ggplot(mapping = aes(fill = Antiviral_Drug, y = n, x = Age_range)) +
  geom_bar(stat = "identity", position = "stack") +
  labs(title = 'Distribution of Age Ranges across Antiviral Drug Administrations')

data |>
  group_by(Antiviral_Drug, Usage_days) |>
  select(Usage_days, Antiviral_Drug) |>
  filter(!is.na(Antiviral_Drug)) |>
  filter(!is.na(Usage_days)) |>
  summarise(n = n())|>
   ggplot(mapping = aes(x = Usage_days, y = n, fill = Antiviral_Drug)) +
  geom_bar(stat = "identity", position = "stack") +
  labs(title = 'Distribution of Antiviral Drugs given per Days Used')

```

## Oxygen Therapy Visualizations

### Data Wrangling

```{r}
oxygen_therp <- data |>
  pivot_longer(
    cols = c("Mask_Oxygen_therapy", "NonInvasive_Oxygen_therapy", "Invasive_Oxygen_therapy", 'HighFlow_Oxygen_therapy'),
    names_to = 'Oxygen_Therapy',
    values_to = 'Therapy_Used'
  ) |>
    pivot_longer(
    cols = c("CTSS_score_1", "CTSS_score_2"),
    names_to = "Severity_Measure",
    values_to = "Severity_Score") |>
  filter(Therapy_Used == 1) |>
  filter(!is.na(Severity_Score)) |>
  select(Age_range, Outcome, Oxygen_Therapy, Severity_Measure, Severity_Score, Number)  

```

### Visualizations

```{r}

ggplot(oxygen_therp,
       mapping = aes(x = Outcome, y = Age_range, fill = Outcome)) +
  geom_col(alpha = 0.7) +
  facet_grid(Age_range ~ Oxygen_Therapy, scales = 'free_y') +
  scale_fill_manual(values = c("red", "navy"), name = "Outcome") +
  labs(
    title = "Age Ranges by Oxygen Therapy and Outcome",
    x = "Outcome",
    y = "Age Ranges"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "top"
  )

ggplot(data = oxygen_therp |>
  filter(Oxygen_Therapy == 'Mask_Oxygen_therapy'), mapping = aes(x = Age_range, fill = Outcome)) +
  geom_bar(alpha = 0.7, color = 'black') +
  scale_fill_manual(values = c("red", "navy"), name = "Outcome") +
  labs(
    title = "Outcome by Age Ranges of Mask Oxygen Therapy Patients",
    x = "Outcome",
    y = "Age Ranges"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "top"
  )

ggplot(oxygen_therp |>
  filter(Oxygen_Therapy == 'NonInvasive_Oxygen_therapy'), mapping = aes(x = Age_range, fill = Outcome)) +
  geom_bar(alpha = 0.7, color = 'black') +
  scale_fill_manual(values = c("red", "navy"), name = "Outcome") +
  labs(
    title = "Outcome by Age Ranges of Non-Invasive Oxygen Therapy Patients",
    x = "Outcome",
    y = "Age Ranges"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "top"
  )

ggplot(oxygen_therp |>
  filter(Oxygen_Therapy == 'Invasive_Oxygen_therapy'), mapping = aes(x = Age_range, fill = Outcome)) +
  geom_bar(alpha = 0.7, color = 'black') +
  scale_fill_manual(values = c("red", "navy"), name = "Outcome") +
  labs(
    title = "Outcome by Age Ranges of Invasive Oxygen Therapy Patients",
    x = "Outcome",
    y = "Age Ranges"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "top"
  )

ggplot(oxygen_therp |>
  filter(Oxygen_Therapy == 'HighFlow_Oxygen_therapy'), mapping = aes(x = Age_range, fill = Outcome)) +
  geom_bar(alpha = 0.7, color = 'black') +
  scale_fill_manual(values = c("red", "navy"), name = "Outcome") +
  labs(
    title = "Outcome by Age Ranges of High Flow Oxygen Therapy",
    x = "Outcome",
    y = "Age Ranges"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "top"
  )

```

```{r}

# Prepare the data for visualization
oxygen_severity_data <- data |>
  pivot_longer(
    cols = c("Mask_Oxygen_therapy", "NonInvasive_Oxygen_therapy", "Invasive_Oxygen_therapy"),
    names_to = "Oxygen_Therapy",
    values_to = "Therapy_Used"
  ) |>
  filter(Therapy_Used == 1) |>
  select(Oxygen_Therapy, Outcome, `CTSS_score_2`, `CTSS_score_1`) |>
  pivot_longer(
    cols = c(`CTSS_score_2`, `CTSS_score_1`),
    names_to = "Severity_Measure",
    values_to = "Severity_Score"
  )

ggplot(oxygen_severity_data, 
       mapping = aes(x = Outcome, y = Severity_Score, fill = Outcome)) +
  geom_boxplot(outlier.shape = NA, alpha = 0.7) +  # Boxplots without outliers
  geom_jitter(width = 0.2, alpha = 0.5) +          # Add jittered points for distribution
  facet_grid(Severity_Measure ~ Oxygen_Therapy, scales = "free_y") +
  scale_fill_manual(values = c("red", "navy"), name = "Outcome") +
  labs(
    title = "Severity by Oxygen Therapy and Outcome",
    x = "Outcome",
    y = "Severity Score"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "top"
  )
```

## Diseases and Symptoms Visualizations

### Symptoms

```{r}
symptom_columns <- c("Whole_body_symptoms", "Respiratory_symptoms", "Cardiovascular_symptoms", "Other_symptoms",
  "Nervous_symptoms", "Gastrointestinal_symptoms")

# Fix counting as it does not work as intended

symptoms <- data |>
  pivot_longer(
    cols = all_of(symptom_columns),
    names_to = "Symptom",
    values_to = "Presence"
  ) |>
  filter(Presence == 1) |>
  select(Age_range, Outcome, Symptom, Presence) 

# Fix heatmap again as a lot of values are missing
symptoms_heat <- symptoms |>
  group_by(Outcome, Symptom) |>
  summarize(n = sum(Presence, na.rn = TRUE), .groups = "drop")

average_frequency <- mean(symptoms_heat$n, na.rm = TRUE)

ggplot(symptoms_heat,
       mapping = aes(x = Outcome, y = Symptom, fill = n)) +
  geom_tile(color = "black") +
  scale_fill_gradient2(low = "blue", mid = "white", high = "orange", midpoint = average_frequency) +
  labs(title = "Symptom Heatmap per Outcome",
       x = "Outcome",
       y = "Symptom",
       fill = "Frequency") +
  theme_minimal()

symptoms |>
  group_by(Age_range, Symptom) |>
  summarise(n = n()) |>
  ggplot(mapping = aes(fill = Symptom, y = n, x = Age_range)) +
  geom_bar(stat = "identity", position = "stack", alpha = 0.7, color = "black") +
  labs(title = 'Distribution of Symptoms across Age Ranges') +
  theme_minimal()

ggplot(symptoms, mapping = aes(fill = Outcome, x = Symptom)) +
  geom_bar(alpha = .7, color = "black") +
  labs(
    title = "Outcome Distribution accross Symptoms",
    x = "Outcome",
    y = "Age Ranges"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "top"
  )

symptom_corr <- data |>
  select(all_of(symptom_columns))
  
symptom_correlations <- cor(symptom_corr, method = "pearson", use = "pairwise.complete.obs")

correlation_long <- symptom_correlations |>
  melt(varnames = c("Symptom1", "Symptom2"), value.name = "Correlation")

ggplot(correlation_long, aes(x = Symptom1, y = Symptom2, fill = Correlation)) +
  geom_tile(color = "white") +  # Add gridlines for clarity
  scale_fill_gradient2(
    low = "blue", high = "red", mid = "white",
    midpoint = 0, limits = c(-1, 1),
    name = "Correlation"
  ) +
  labs(
    title = "Symptom Correlation Heatmap",
    x = "Symptom",
    y = "Symptom"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.text.y = element_text(size = 10),
    plot.title = element_text(hjust = 0.5)
  )
```

```{r}
columns <- c("Hypertension_disease", "Diabetes_disease", "CVD_disease", "COPD_disease", "Cerebrovascular_disease", "Chronic_Kidney_disease", "Malignant_tumor_disease", "Immunodeficiency_disease", "Other_disease","Whole_body_symptoms", "Respiratory_symptoms", "Cardiovascular_symptoms", "Other_symptoms",
  "Nervous_symptoms", "Gastrointestinal_symptoms")

ds_corr <- data |>
  select(all_of(columns))
  
ds_correlations <- cor(ds_corr, method = "pearson", use = "pairwise.complete.obs")

correlation_long <- ds_correlations |>
  melt(varnames = c("DS1", "DS2"), value.name = "Correlation")

ggplot(correlation_long, aes(x = DS1, y = DS2, fill = Correlation)) +
  geom_tile(color = "white") +  # Add gridlines for clarity
  scale_fill_gradient2(
    low = "blue", high = "red", mid = "white",
    midpoint = 0, limits = c(-1, 1),
    name = "Correlation"
  ) +
  labs(
    title = "Disease and Symptom Correlation Heatmap",
    x = "DS",
    y = "DS"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.text.y = element_text(size = 10),
    plot.title = element_text(hjust = 0.5)
  )
```

### Diseases

```{r}
disease_cols <- c("Hypertension_disease", "Diabetes_disease", "CVD_disease", "COPD_disease", "Cerebrovascular_disease", "Chronic_Kidney_disease", "Malignant_tumor_disease", "Immunodeficiency_disease", "Other_disease")

diseases <- data |>
  pivot_longer(
    cols = all_of(disease_cols),
    names_to = "Disease",
    values_to = "Presence"
  ) |>
  filter(Presence == 1) |>
  select(Age_range, Outcome, Disease, Presence) 

# Fix heatmap again as a lot of values are missing
diseases_heat <- diseases |>
  group_by(Outcome, Disease) |>
  summarize(n = sum(Presence, na.rn = TRUE), .groups = "drop")

average_frequency <- mean(diseases_heat$n, na.rm = TRUE)

ggplot(diseases_heat,
       mapping = aes(x = Outcome, y = Disease, fill = n)) +
  geom_tile(color = "black") +
  scale_fill_gradient2(low = "blue", mid = "white", high = "orange", midpoint = average_frequency) +
  labs(title = "Disease Heatmap per Outcome",
       x = "Outcome",
       y = "Symptom",
       fill = "Frequency") +
  theme_minimal()

diseases |>
  group_by(Age_range, Disease) |>
  summarise(n = n()) |>
  ggplot(mapping = aes(fill = Disease, y = n, x = Age_range)) +
  geom_bar(stat = "identity", position = "stack", alpha = 0.7, color = "black") +
  labs(title = 'Distribution of Disease across Age Ranges') +
  theme_minimal()

ggplot(diseases, mapping = aes(fill = Outcome, x = Disease)) +
  geom_bar(alpha = .7, color = "black") +
  labs(
    title = "Outcome Distribution by Diseases",
    x = "Outcome",
    y = "Age Ranges"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "top"
  )

disease_corr <- data |>
  select(all_of(disease_cols))
  
disease_correlations <- cor(disease_corr, method = "pearson", use = "pairwise.complete.obs")

correlation_long <- disease_correlations |>
  melt(varnames = c("Disease1", "Disease2"), value.name = "Correlation")

ggplot(correlation_long, aes(x = Disease1, y = Disease2, fill = Correlation)) +
  geom_tile(color = "white") +  # Add gridlines for clarity
  scale_fill_gradient2(
    low = "blue", high = "red", mid = "white",
    midpoint = 0, limits = c(-1, 1),
    name = "Correlation"
  ) +
  labs(
    title = "Disease Correlation Heatmap",
    x = "Disease",
    y = "Disease"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.text.y = element_text(size = 10),
    plot.title = element_text(hjust = 0.5)
  )
```

## CT Progression and Lung Severity

### Data Wrangling

```{r}
ctprogress <- data |>
  select(CTSS_score_1, CTSS_score_2, CT_D1_days_1, CT_D1_days_2, Affected_lung_lobes_1, Affected_lung_lobes_2, Outcome)
  
ct_data <- ctprogress |>
  pivot_longer(
    cols = c(CTSS_score_1, CTSS_score_2, Affected_lung_lobes_1, Affected_lung_lobes_2, CT_D1_days_1, CT_D1_days_2),
    names_to = c(".value", "CT_Scan"),
    names_pattern = "(.+?)_(\\d)$"
  ) |>
  filter(!is.na(CTSS_score) & !is.na(CT_D1_days))

```

### Visualizations

#### Attempt at Tracking of Severity Score Across Time

```{r}
ggplot(ct_data, aes(x = CT_D1_days, y = CTSS_score, color = Outcome)) +
  geom_point(size = 3, alpha = 0.7) +
  geom_smooth(method = "lm", se = FALSE, linetype = "dashed") +
  facet_wrap(~ CT_Scan, labeller = as_labeller(c("1" = "CT1", "2" = "CT2"))) +
  labs(
    title = "Disease Progression: CT Severity Over Time",
    x = "Days from Diagnosis (D1)",
    y = "CT Severity Score",
    color = "Outcome"
  ) +
  theme_minimal()
```

#### Density Plot

```{r}
ggplot(ct_data, aes(x = CTSS_score, fill = Outcome)) +
  geom_density(alpha = 0.6) +
  facet_wrap(~ CT_Scan, labeller = as_labeller(c("1" = "CT1", "2" = "CT2"))) +
  labs(
    title = "CT Severity Score Distribution by Outcome",
    x = "CT Severity Score",
    y = "Density"
  ) +
  theme_minimal()
```

#### Progression of Lobar Involvement

```{r}
ggplot(ct_data, aes(x = CT_Scan, y = Affected_lung_lobes, color = Outcome)) +
  geom_jitter(alpha = 0.6, size = 3, width = 0.2) +
  geom_boxplot(alpha = 0.3, outlier.shape = NA) +
  labs(
    title = "Lobar Involvement Progression",
    x = "CT Scan",
    y = "Affected Lung Lobes"
  ) +
  theme_minimal()
```

#### CTSS Score agains Affected Lung Lobes

```{r}
ggplot(ct_data, aes(x = Affected_lung_lobes, y = CTSS_score, color = Outcome)) +
  geom_point(size = 3, alpha = 0.7) +
  geom_smooth(method = "lm", se = FALSE, linetype = "dashed") +
  facet_wrap(~ CT_Scan, labeller = as_labeller(c("1" = "CT1", "2" = "CT2"))) +
  labs(
    title = "CTSS Score vs. Affected Lung Lobes",
    x = "Affected Lung Lobes",
    y = "CT Severity Score"
  ) +
  theme_minimal()

```

#### Heatmap ??

```{r}
heatmap_data <- ct_data |>
  group_by(Outcome, CT_Scan) |>
  summarize(
    Avg_CTSS = mean(CTSS_score, na.rm = TRUE),
    Avg_Lobes = mean(Affected_lung_lobes, na.rm = TRUE)
  ) |>
  pivot_longer(cols = c(Avg_CTSS, Avg_Lobes), names_to = "Metric", values_to = "Value")

ggplot(heatmap_data, aes(x = CT_Scan, y = Metric, fill = Value)) +
  geom_tile(color = "white") +
  scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 10, name = "Value") +
  facet_wrap(~ Outcome) +
  labs(
    title = "Heatmap of CT Severity and Lung Involvement by Outcome",
    x = "CT Scan",
    y = "Metric"
  ) +
  theme_minimal()
```

```{r}

tabledat <- data |>
  mutate(
      Hypertension_disease = factor(Hypertension_disease, labels = c("No", "Yes")),
    Diabetes_disease = factor(Diabetes_disease, labels = c("No", "Yes")),
    CVD_disease = factor(CVD_disease, labels = c("No", "Yes")),
    COPD_disease = factor(COPD_disease, labels = c("No", "Yes")),
    Cerebrovascular_disease = factor(Cerebrovascular_disease, labels = c("No", "Yes")),
    Chronic_Kidney_disease = factor(Chronic_Kidney_disease, labels = c("No", "Yes")),
    Malignant_tumor_disease = factor(Malignant_tumor_disease, labels = c("No", "Yes")),
    Immunodeficiency_disease = factor(Immunodeficiency_disease, labels = c("No", "Yes")),
    Other_disease = factor(Other_disease, labels = c("No", "Yes")),
    Whole_body_symptoms = factor(Whole_body_symptoms, labels = c("No", "Yes")),
    Respiratory_symptoms = factor(Respiratory_symptoms, labels = c("No", "Yes")),
    Cardiovascular_symptoms = factor(Cardiovascular_symptoms, labels = c("No", "Yes")),
    Other_symptoms = factor(Other_symptoms, labels = c("No", "Yes")),
    Nervous_symptoms = factor(Nervous_symptoms, labels = c("No", "Yes")),
    Gastrointestinal_symptoms = factor(Gastrointestinal_symptoms, labels = c("No", "Yes"))
  )

label(tabledat[["Hypertension_disease"]]) <- "Hypertension"
label(tabledat[["Diabetes_disease"]]) <- "Diabetes"
label(tabledat[["CVD_disease"]]) <- "Cardiovascular Disease (CVD)"
label(tabledat[["COPD_disease"]]) <- "Chronic Obstructive Pulmonary Disease (COPD)"
label(tabledat[["Cerebrovascular_disease"]]) <- "Cerebrovascular Disease"
label(tabledat[["Chronic_Kidney_disease"]]) <- "Chronic Kidney Disease"
label(tabledat[["Malignant_tumor_disease"]]) <- "Malignant Tumor"
label(tabledat[["Immunodeficiency_disease"]]) <- "Immunodeficiency"
label(tabledat[["Other_disease"]]) <- "Other Disease"
label(tabledat[["Whole_body_symptoms"]]) <- "Whole Body Symptoms"
label(tabledat[["Respiratory_symptoms"]]) <- "Respiratory Symptoms"
label(tabledat[["Cardiovascular_symptoms"]]) <- "Cardiovascular Symptoms"
label(tabledat[["Other_symptoms"]]) <- "Other Symptoms"
label(tabledat[["Nervous_symptoms"]]) <- "Nervous Symptoms"
label(tabledat[["Gastrointestinal_symptoms"]]) <- "Gastrointestinal Symptoms"
label(tabledat[["Age_range"]]) <- "Age Group (Years)"
label(tabledat[["Hospitalization_days"]]) <- "Hospitalization Time (Days)"
label(tabledat[["ICU_hospitalization_days"]]) <- "ICU Hospitalization Time (Days)"
label(tabledat[["Fever_days"]]) <- "Fever Duration (Days)"

table1(
  x = ~ Age_range + Hospitalization_days + ICU_hospitalization_days +
      Fever_days +  Hypertension_disease + Diabetes_disease + CVD_disease + COPD_disease + Cerebrovascular_disease + Chronic_Kidney_disease + Malignant_tumor_disease + Immunodeficiency_disease + Other_disease + Whole_body_symptoms + Respiratory_symptoms + Cardiovascular_symptoms + Other_symptoms + Nervous_symptoms + Gastrointestinal_symptoms| Outcome,
  data = tabledat
)

```

### Pathogenic Results for every Specimen Location

```{r}
# Will rename columns such that the spaces do not cause hindrance
pathogenic_summ <- data |>
  group_by(Specimen_collection_location, Pathogenic_culture_results) |>
  summarize(n = n(), .groups ="drop")
  
pathogenic_summ |>
  ggplot(mapping = aes(fill = Pathogenic_culture_results, y = n, x = Specimen_collection_location)) +
  geom_bar(stat = "identity", position = "stack", alpha = 0.7, color = "black") +
  labs(title = "Pathogenic Results per Specimen Location",
       x = "Specimen Location",
       y = "Count",
       fill = "Pathogen Culture") +
  theme_minimal()

```
