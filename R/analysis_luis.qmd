---
title: "Analysis"
author: "Miguel Blanco"
format: html
editor: visual
---

```{r}
library(purrr)
library(broom)
data <- read_tsv(file = "../data/03_data_augmented.tsv")
```
```{r}
library(ggplot2)
```

```{r}
datafea <- data |> 
  rowwise() |>  # Operar fila por fila
  mutate(bleeding_events = sum(c_across(starts_with("bleeding_event")))) |> 
  ungroup()

# Gr√°fico corregido
ggplot(datafea, mapping = aes(x = Death, y = bleeding_events)) +
  geom_col()  # geom_point() debe estar separado
```
```{r}
ggplot(datafea, aes(x = as.factor(bleeding_events), y = `D7plt[10^9/L]`)) +
  geom_boxplot() +
  stat_summary(
    fun = mean, geom = "point", shape = 20, size = 3, color = "red"
  ) + 
  labs(
    title = "Distribution of D7plt[10^9/L] by Bleeding Events",
    x = "Bleeding Events (0 = No, 1+ = Yes)",
    y = "D7plt[10^9/L]"
  ) +
  theme_minimal() # geom_point() debe estar separado
```
```{r}
ggplot(datafea, aes(x = as.factor(bleeding_events), y = `PT[sec]`)) +
  geom_boxplot() +
  stat_summary(
    fun = mean, geom = "point", shape = 20, size = 3, color = "red"
  ) + 
  labs(
    title = "Distribution of D7plt[10^9/L] by Bleeding Events",
    x = "Bleeding Events (0 = No, 1+ = Yes)",
    y = "D7plt[10^9/L]"
  ) +
  theme_minimal() # geom_point() debe estar separado
```
## Find Outcome most Correlated Variable

```{r}
data <- datafea |> 
  filter(bleeding_events != 1) |> 
  select(-c(bleeding_events, Bleeding_event_Skin, Bleeding_event_Respiratory_track, Bleeding_event_Other, ECMO, Number, Age_range))
```

```{r}
data <- data |> 
  mutate(Death = as.factor(Death))
```

```{r}
data_numeric <- data |> 
  mutate(across(everything(), as.numeric))
```

```{r}
data_numeric_NAs <- NA_prop(data_numeric)

numeric_column_to_drop <- data_numeric_NAs |> 
  filter(na_proportion > 0.35) |> 
  pull(column)

data_numeric <- data_numeric |> 
  select(-any_of(numeric_column_to_drop))

data_numeric <- as.data.frame(scale(data_numeric))
```

```{r}

results <- data_numeric |> 
  select(-Death) |>  
  pivot_longer(cols = everything(), names_to = "variable", values_to = "value") |> 
  group_by(variable) |> 
  summarise(
    model = list(glm(Death ~ value, data = data, family = binomial))
  )
```

```{r}
results_tidy <- results |> 
  mutate(
    model_summary = map(model, ~ tidy(.x, conf.int = TRUE))
  ) |> 
  unnest(model_summary) |>
  #Get only the slope, not the intercept
  filter(term == "value") |> 
  select(variable, p.value, estimate, conf.low, conf.high) |> 
  mutate(q.value = p.adjust(p.value, method = "BH"))
```

```{r}
significant_variables <- results_tidy |> 
  filter(q.value < 0.05)
  
```
